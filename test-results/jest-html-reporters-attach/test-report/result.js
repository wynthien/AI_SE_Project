window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":5,"numPassedTests":41,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":41,"startTime":1761330751951,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761330752694,"loadTestEnvironmentEnd":1761330752287,"loadTestEnvironmentStart":1761330752133,"runtime":406,"setupAfterEnvEnd":1761330752632,"setupAfterEnvStart":1761330752576,"setupFilesEnd":1761330752288,"setupFilesStart":1761330752288,"slow":false,"start":1761330752288},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\controllers\\chatController.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["chatController"],"duration":11,"failureMessages":[],"fullName":"chatController handleChat returns 400 when no message provided","status":"passed","title":"handleChat returns 400 when no message provided"},{"ancestorTitles":["chatController"],"duration":1,"failureMessages":[],"fullName":"chatController handleChat returns reply when model resolves","status":"passed","title":"handleChat returns reply when model resolves"},{"ancestorTitles":["chatController"],"duration":1,"failureMessages":[],"fullName":"chatController chatBA returns todo list when model returns text synchronously","status":"passed","title":"chatBA returns todo list when model returns text synchronously"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761330752861,"loadTestEnvironmentEnd":1761330752283,"loadTestEnvironmentStart":1761330752127,"runtime":577,"setupAfterEnvEnd":1761330752625,"setupAfterEnvStart":1761330752567,"setupFilesEnd":1761330752284,"setupFilesStart":1761330752284,"slow":false,"start":1761330752284},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\tests\\chatController.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["ChatController - handleChat","Validation Tests"],"duration":7,"failureMessages":[],"fullName":"ChatController - handleChat Validation Tests should return 400 when message is missing","status":"passed","title":"should return 400 when message is missing"},{"ancestorTitles":["ChatController - handleChat","Validation Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - handleChat Validation Tests should return 400 when message is empty string","status":"passed","title":"should return 400 when message is empty string"},{"ancestorTitles":["ChatController - handleChat","Success Tests"],"duration":2,"failureMessages":[],"fullName":"ChatController - handleChat Success Tests should return AI reply on successful chat","status":"passed","title":"should return AI reply on successful chat"},{"ancestorTitles":["ChatController - handleChat","Success Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - handleChat Success Tests should handle special characters in message","status":"passed","title":"should handle special characters in message"},{"ancestorTitles":["ChatController - handleChat","Error Handling"],"duration":2,"failureMessages":[],"fullName":"ChatController - handleChat Error Handling should handle API errors gracefully","status":"passed","title":"should handle API errors gracefully"},{"ancestorTitles":["ChatController - handleChat","Error Handling"],"duration":1,"failureMessages":[],"fullName":"ChatController - handleChat Error Handling should handle network timeout","status":"passed","title":"should handle network timeout"},{"ancestorTitles":["ChatController - chatBA","Business Analyst Mode Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - chatBA Business Analyst Mode Tests should generate BA todo list from user story","status":"passed","title":"should generate BA todo list from user story"},{"ancestorTitles":["ChatController - chatBA","Business Analyst Mode Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - chatBA Business Analyst Mode Tests should include only required sections in response","status":"passed","title":"should include only required sections in response"},{"ancestorTitles":["ChatController - chatBA","Error Handling for BA Mode"],"duration":1,"failureMessages":[],"fullName":"ChatController - chatBA Error Handling for BA Mode should handle BA mode API errors","status":"passed","title":"should handle BA mode API errors"}]},{"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761330753077,"loadTestEnvironmentEnd":1761330752286,"loadTestEnvironmentStart":1761330752130,"runtime":790,"setupAfterEnvEnd":1761330752654,"setupAfterEnvStart":1761330752589,"setupFilesEnd":1761330752287,"setupFilesStart":1761330752287,"slow":false,"start":1761330752287},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\tests\\mocking.examples.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Mocking Examples & Patterns","Sinon Stubs Examples"],"duration":6,"failureMessages":[],"fullName":"Mocking Examples & Patterns Sinon Stubs Examples stub should return predefined value","status":"passed","title":"stub should return predefined value"},{"ancestorTitles":["Mocking Examples & Patterns","Sinon Stubs Examples"],"duration":3,"failureMessages":[],"fullName":"Mocking Examples & Patterns Sinon Stubs Examples stub should resolve promise","status":"passed","title":"stub should resolve promise"},{"ancestorTitles":["Mocking Examples & Patterns","Sinon Stubs Examples"],"duration":4,"failureMessages":[],"fullName":"Mocking Examples & Patterns Sinon Stubs Examples stub should reject on error","status":"passed","title":"stub should reject on error"},{"ancestorTitles":["Mocking Examples & Patterns","Sinon Stubs Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Sinon Stubs Examples stub should track call arguments","status":"passed","title":"stub should track call arguments"},{"ancestorTitles":["Mocking Examples & Patterns","Sinon Stubs Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Sinon Stubs Examples stub should support conditional returns","status":"passed","title":"stub should support conditional returns"},{"ancestorTitles":["Mocking Examples & Patterns","Sinon Spies Examples"],"duration":3,"failureMessages":[],"fullName":"Mocking Examples & Patterns Sinon Spies Examples spy should track function calls without replacing","status":"passed","title":"spy should track function calls without replacing"},{"ancestorTitles":["Mocking Examples & Patterns","Sinon Spies Examples"],"duration":2,"failureMessages":[],"fullName":"Mocking Examples & Patterns Sinon Spies Examples spy should track call count and arguments","status":"passed","title":"spy should track call count and arguments"},{"ancestorTitles":["Mocking Examples & Patterns","Nock HTTP Mocking Examples"],"duration":19,"failureMessages":[],"fullName":"Mocking Examples & Patterns Nock HTTP Mocking Examples nock should mock GET request","status":"passed","title":"nock should mock GET request"},{"ancestorTitles":["Mocking Examples & Patterns","Nock HTTP Mocking Examples"],"duration":35,"failureMessages":[],"fullName":"Mocking Examples & Patterns Nock HTTP Mocking Examples nock should mock POST request with body","status":"passed","title":"nock should mock POST request with body"},{"ancestorTitles":["Mocking Examples & Patterns","Nock HTTP Mocking Examples"],"duration":31,"failureMessages":[],"fullName":"Mocking Examples & Patterns Nock HTTP Mocking Examples nock should mock multiple requests","status":"passed","title":"nock should mock multiple requests"},{"ancestorTitles":["Mocking Examples & Patterns","Nock HTTP Mocking Examples"],"duration":16,"failureMessages":[],"fullName":"Mocking Examples & Patterns Nock HTTP Mocking Examples nock should mock error responses","status":"passed","title":"nock should mock error responses"},{"ancestorTitles":["Mocking Examples & Patterns","Nock HTTP Mocking Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Nock HTTP Mocking Examples nock should verify all mocks were used","status":"passed","title":"nock should verify all mocks were used"},{"ancestorTitles":["Mocking Examples & Patterns","Fake Timers Examples"],"duration":3,"failureMessages":[],"fullName":"Mocking Examples & Patterns Fake Timers Examples fake timers should advance time","status":"passed","title":"fake timers should advance time"},{"ancestorTitles":["Mocking Examples & Patterns","Fake Timers Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Fake Timers Examples fake timers should handle setTimeout","status":"passed","title":"fake timers should handle setTimeout"},{"ancestorTitles":["Mocking Examples & Patterns","Call Verification Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Call Verification Examples verify stub was called correct number of times","status":"passed","title":"verify stub was called correct number of times"},{"ancestorTitles":["Mocking Examples & Patterns","Call Verification Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Call Verification Examples verify stub was called with specific arguments","status":"passed","title":"verify stub was called with specific arguments"},{"ancestorTitles":["Mocking Examples & Patterns","Call Verification Examples"],"duration":0,"failureMessages":[],"fullName":"Mocking Examples & Patterns Call Verification Examples verify stub call order","status":"passed","title":"verify stub call order"},{"ancestorTitles":["Mocking Examples & Patterns","Stub Restoration Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Stub Restoration Examples stub should be restorable","status":"passed","title":"stub should be restorable"},{"ancestorTitles":["Mocking Examples & Patterns","Stub Restoration Examples"],"duration":1,"failureMessages":[],"fullName":"Mocking Examples & Patterns Stub Restoration Examples restoreAllStubs should clean all mocks","status":"passed","title":"restoreAllStubs should clean all mocks"},{"ancestorTitles":["Mocking Examples & Patterns","Practical API Mocking Scenarios"],"duration":19,"failureMessages":[],"fullName":"Mocking Examples & Patterns Practical API Mocking Scenarios mock real-world API response structure","status":"passed","title":"mock real-world API response structure"},{"ancestorTitles":["Mocking Examples & Patterns","Practical API Mocking Scenarios"],"duration":62,"failureMessages":[],"fullName":"Mocking Examples & Patterns Practical API Mocking Scenarios mock cascading API calls","status":"passed","title":"mock cascading API calls"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761330753131,"loadTestEnvironmentEnd":1761330752283,"loadTestEnvironmentStart":1761330752121,"runtime":847,"setupAfterEnvEnd":1761330752600,"setupAfterEnvStart":1761330752554,"setupFilesEnd":1761330752284,"setupFilesStart":1761330752284,"slow":false,"start":1761330752284},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\models\\Message.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Message model"],"duration":9,"failureMessages":[],"fullName":"Message model has correct model name","status":"passed","title":"has correct model name"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761330753188,"loadTestEnvironmentEnd":1761330752277,"loadTestEnvironmentStart":1761330752126,"runtime":910,"setupAfterEnvEnd":1761330752646,"setupAfterEnvStart":1761330752586,"setupFilesEnd":1761330752278,"setupFilesStart":1761330752278,"slow":false,"start":1761330752278},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\tests\\Message.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Message Model","Schema Definition"],"duration":5,"failureMessages":[],"fullName":"Message Model Schema Definition should have correct model name","status":"passed","title":"should have correct model name"},{"ancestorTitles":["Message Model","Schema Definition"],"duration":1,"failureMessages":[],"fullName":"Message Model Schema Definition should have userMessage field as required","status":"passed","title":"should have userMessage field as required"},{"ancestorTitles":["Message Model","Schema Definition"],"duration":0,"failureMessages":[],"fullName":"Message Model Schema Definition should have aiReply field with default empty string","status":"passed","title":"should have aiReply field with default empty string"},{"ancestorTitles":["Message Model","Schema Definition"],"duration":1,"failureMessages":[],"fullName":"Message Model Schema Definition should have timestamp field with default Date.now","status":"passed","title":"should have timestamp field with default Date.now"},{"ancestorTitles":["Message Model","Field Types"],"duration":0,"failureMessages":[],"fullName":"Message Model Field Types userMessage should be of type String","status":"passed","title":"userMessage should be of type String"},{"ancestorTitles":["Message Model","Field Types"],"duration":0,"failureMessages":[],"fullName":"Message Model Field Types aiReply should be of type String","status":"passed","title":"aiReply should be of type String"},{"ancestorTitles":["Message Model","Field Types"],"duration":1,"failureMessages":[],"fullName":"Message Model Field Types timestamp should be of type Date","status":"passed","title":"timestamp should be of type Date"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"D:\\VSCode\\AI for SE\\AI_SE_Project\\coverage","coverageProvider":"v8","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\VSCode\\AI for SE\\AI_SE_Project\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test-results","filename":"test-report.html","expand":true,"openReport":false}]],"rootDir":"D:\\VSCode\\AI for SE\\AI_SE_Project","runInBand":false,"runTestsByPath":false,"seed":1046956164,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":[],"type":"TestPathPatterns"},"testSequencer":"D:\\VSCode\\AI for SE\\AI_SE_Project\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1761330753241,"_reporterOptions":{"publicPath":"./test-results","filename":"test-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})