window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":4,"numPassedTests":20,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":20,"startTime":1761329944229,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761329945482,"loadTestEnvironmentEnd":1761329944861,"loadTestEnvironmentStart":1761329944721,"runtime":620,"setupAfterEnvEnd":1761329945339,"setupAfterEnvStart":1761329945130,"setupFilesEnd":1761329944862,"setupFilesStart":1761329944862,"slow":false,"start":1761329944862},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\controllers\\chatController.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["chatController"],"duration":11,"failureMessages":[],"fullName":"chatController handleChat returns 400 when no message provided","status":"passed","title":"handleChat returns 400 when no message provided"},{"ancestorTitles":["chatController"],"duration":1,"failureMessages":[],"fullName":"chatController handleChat returns reply when model resolves","status":"passed","title":"handleChat returns reply when model resolves"},{"ancestorTitles":["chatController"],"duration":1,"failureMessages":[],"fullName":"chatController chatBA returns todo list when model returns text synchronously","status":"passed","title":"chatBA returns todo list when model returns text synchronously"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761329945514,"loadTestEnvironmentEnd":1761329944857,"loadTestEnvironmentStart":1761329944722,"runtime":656,"setupAfterEnvEnd":1761329945337,"setupAfterEnvStart":1761329945129,"setupFilesEnd":1761329944858,"setupFilesStart":1761329944858,"slow":false,"start":1761329944858},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\tests\\chatController.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["ChatController - handleChat","Validation Tests"],"duration":8,"failureMessages":[],"fullName":"ChatController - handleChat Validation Tests should return 400 when message is missing","status":"passed","title":"should return 400 when message is missing"},{"ancestorTitles":["ChatController - handleChat","Validation Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - handleChat Validation Tests should return 400 when message is empty string","status":"passed","title":"should return 400 when message is empty string"},{"ancestorTitles":["ChatController - handleChat","Success Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - handleChat Success Tests should return AI reply on successful chat","status":"passed","title":"should return AI reply on successful chat"},{"ancestorTitles":["ChatController - handleChat","Success Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - handleChat Success Tests should handle special characters in message","status":"passed","title":"should handle special characters in message"},{"ancestorTitles":["ChatController - handleChat","Error Handling"],"duration":1,"failureMessages":[],"fullName":"ChatController - handleChat Error Handling should handle API errors gracefully","status":"passed","title":"should handle API errors gracefully"},{"ancestorTitles":["ChatController - handleChat","Error Handling"],"duration":3,"failureMessages":[],"fullName":"ChatController - handleChat Error Handling should handle network timeout","status":"passed","title":"should handle network timeout"},{"ancestorTitles":["ChatController - chatBA","Business Analyst Mode Tests"],"duration":2,"failureMessages":[],"fullName":"ChatController - chatBA Business Analyst Mode Tests should generate BA todo list from user story","status":"passed","title":"should generate BA todo list from user story"},{"ancestorTitles":["ChatController - chatBA","Business Analyst Mode Tests"],"duration":1,"failureMessages":[],"fullName":"ChatController - chatBA Business Analyst Mode Tests should include only required sections in response","status":"passed","title":"should include only required sections in response"},{"ancestorTitles":["ChatController - chatBA","Error Handling for BA Mode"],"duration":2,"failureMessages":[],"fullName":"ChatController - chatBA Error Handling for BA Mode should handle BA mode API errors","status":"passed","title":"should handle BA mode API errors"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761329945900,"loadTestEnvironmentEnd":1761329944854,"loadTestEnvironmentStart":1761329944719,"runtime":1045,"setupAfterEnvEnd":1761329945314,"setupAfterEnvStart":1761329945120,"setupFilesEnd":1761329944855,"setupFilesStart":1761329944855,"slow":false,"start":1761329944855},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\models\\Message.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Message model"],"duration":5,"failureMessages":[],"fullName":"Message model has correct model name","status":"passed","title":"has correct model name"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1761329945912,"loadTestEnvironmentEnd":1761329944861,"loadTestEnvironmentStart":1761329944722,"runtime":1050,"setupAfterEnvEnd":1761329945309,"setupAfterEnvStart":1761329945124,"setupFilesEnd":1761329944862,"setupFilesStart":1761329944862,"slow":false,"start":1761329944862},"testFilePath":"D:\\VSCode\\AI for SE\\AI_SE_Project\\tests\\Message.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Message Model","Schema Definition"],"duration":5,"failureMessages":[],"fullName":"Message Model Schema Definition should have correct model name","status":"passed","title":"should have correct model name"},{"ancestorTitles":["Message Model","Schema Definition"],"duration":1,"failureMessages":[],"fullName":"Message Model Schema Definition should have userMessage field as required","status":"passed","title":"should have userMessage field as required"},{"ancestorTitles":["Message Model","Schema Definition"],"duration":0,"failureMessages":[],"fullName":"Message Model Schema Definition should have aiReply field with default empty string","status":"passed","title":"should have aiReply field with default empty string"},{"ancestorTitles":["Message Model","Schema Definition"],"duration":1,"failureMessages":[],"fullName":"Message Model Schema Definition should have timestamp field with default Date.now","status":"passed","title":"should have timestamp field with default Date.now"},{"ancestorTitles":["Message Model","Field Types"],"duration":0,"failureMessages":[],"fullName":"Message Model Field Types userMessage should be of type String","status":"passed","title":"userMessage should be of type String"},{"ancestorTitles":["Message Model","Field Types"],"duration":0,"failureMessages":[],"fullName":"Message Model Field Types aiReply should be of type String","status":"passed","title":"aiReply should be of type String"},{"ancestorTitles":["Message Model","Field Types"],"duration":1,"failureMessages":[],"fullName":"Message Model Field Types timestamp should be of type Date","status":"passed","title":"timestamp should be of type Date"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"D:\\VSCode\\AI for SE\\AI_SE_Project\\coverage","coverageProvider":"v8","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\VSCode\\AI for SE\\AI_SE_Project\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test-results","filename":"test-report.html","expand":true,"openReport":false}]],"rootDir":"D:\\VSCode\\AI for SE\\AI_SE_Project","runInBand":false,"runTestsByPath":false,"seed":836600025,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":[],"type":"TestPathPatterns"},"testSequencer":"D:\\VSCode\\AI for SE\\AI_SE_Project\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\coverage\\lcov-report\\index.html"},"endTime":1761329945958,"_reporterOptions":{"publicPath":"./test-results","filename":"test-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})